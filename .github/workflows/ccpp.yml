name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: 1
        run: |
          mkdir build
          cd build
          curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          sudo -E apt-add-repository -y 'ppa:ubuntu-toolchain-r/test'
          sudo add-apt-repository ppa:mhier/libboost-latest
          sudo apt-get clean
          sudo apt-get update
          sudo apt-get install --force-yes \
              zip \
              autopoint \
              bison \
              flex \
              libtool-bin \
              libltdl-dev \
              lzip \
              gperf \
              intltool
          git clone https://github.com/mxe/mxe.git
      - name: 2
        run: |
          cd build
          cd mxe
          MXE_GCC_THREADS=posix \
           MXE_PLUGIN_DIRS=plugins/gcc6/ \
           make libiconv zlib libpng jpeg boost openssl libwebp -j8 JOBS=8
          ls -R
      - name: 3
        run: |
           export PATH=/home/runner/work/arc_unpacker/arc_unpacker/build/mxe/usr/bin:$PATH
           echo $PATH
           mkdir build-mxe
           cd build-mxe
           ../build/mxe/usr/bin/i686-w64-mingw32.static-cmake ..
           make -j8
      - name: Check exists
        run: |
          ls -R
          file build-mxe/arc_unpacker.exe
          zip arc_unpacker build-mxe/arc_unpacker.exe
      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
          tag_name: 0.12
          # The name of the release. For example, `Release v1.0.1`
          release_name: 0.12
          # Text describing the contents of the tag.
          body: # optional
          # `true` to create a draft (unpublished) release, `false` to create a published one. Default: `false`
          draft: # optional
          # `true` to identify the release as a prerelease. `false` to identify the release as a full release. Default: `false`
          prerelease: # optional- name: Create a Release
      - name: Upload a Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # The URL for uploading assets to the release
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # The path to the asset you want to upload
          asset_path: arc_unpacker.zip
          # The name of the asset you want to upload
          asset_name: 0.12
          # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
          asset_content_type: application/zip
